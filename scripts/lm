#!/usr/bin/env python
# -*- coding: utf-8 -*-

from lm import *

if __name__ == "__main__":

    consoleLogging( LOG_FORMAT, logging.ERROR )

    options, args  = parse_arguments()

    if options.debug:
        consoleLogging( LOG_FORMAT, logging.INFO)

        rootdir = os.path.expanduser(u"~/.lm")
        filelog = os.path.join( rootdir, u"lm_log.txt" )
        if not os.path.exists( rootdir ):
            os.mkdir( rootdir )
        fileLogging( LOG_FORMAT, logging.INFO, filelog )

        logger.info("argparse namespace: %s" % str(options) )
        logger.info("arg files type: %s" % \
                ', '.join([str(type(f)) for f in args]) )
        logger.info("file system encoding: %s" % sys.getfilesystemencoding())
        logger.info("system encoding: %s" % sys.getdefaultencoding())
        logger.info("locale encoding: %s" % locale.getdefaultlocale()[1])

    else:
        consoleLogging( LOG_FORMAT, logging.ERROR )

    LM  = ListMovies(options, logging.INFO if options.debug \
                else logging.ERROR)

    if options.version:
        print( VERSION )
        sys.exit()

    if options.reset:
        LM.reset_cache_files()
        sys.exit()

    files = LM.get_files(args)

    if options.delete_cache:
        LM.delete_cache(files)
        sys.exit()

    LM.update_caches_with_paths( files )
    LM.update_cache_hash_opensubtitles()
    LM.update_cache_hash_metadata()
    files = LM.filter_and_sort_files(files)

    if options.confirm:
        LM.manual_confirm(files)

    elif options.upload:
        LM.upload_to_opensubtitles(files)

    elif options.download:
        LM.download_subtitle(files, options.download)

    elif options.show or options.html_build:
        LM.html_build(files)
        if options.show:
            LM.html_show()

    elif options.show_imdb:
        LM.imdb_show(files)

    else:
        LM.show_list( files )

